// cppApp_2laba_2sem_ver2.cpp: определяет точку входа для консольного приложения.
/*Результатом должна быть консольная программа с текстовым меню. Программа
должна содержать шаблонный класс для управления данными согласно заданию.
Для хранения данных необходимо выбрать оптимальный с точки зрения задания
контейнер.
1. Предусмотреть операции добавления, изменения и удаления элемента
контейнера.
2. Реализовать ввод и вывод элементов контейнера с использованием потоковых
итераторов на экран и в файл.
3. Реализовать операции поиска по заданным критериям и выборки подмножества
элементов по заданным критериям. Реализовать поиск в двух вариантах: линейный
поиск и двоичный поиск на отсортированном контейнере.
4. Предусмотреть вывод подмножества выборки на экран и в файл.

Список абонентов кабельной сети состоит из структур с полями:
фамилия, район, адрес, телефон, номер договора, дата заключения договора,
оплата установки, абонентская плата помесячно, дата последнего платежа.
Поиск по фамилии, району, дате заключения договора, дате последнего платежа

static comparator, equals
2 - текстовый
3 - и текстовый и бинарный+проверки на дурака*/
#include "stdafx.h"
#include "locale.h"
#include "abonent.h"

void expor_vect(vector<abonent> v) {
	char print_choise;
	cout << "1.На экран\n2.В файл\n";
	cin >> print_choise;
	switch (print_choise) {
	case '1':print_v(v);
		break;
	case '2':save_binary(v);
		break;
	default: cout << "\nНеверный ввод\n";
	}
}

int main(int argc, _TCHAR* argv[])
{
	vector<abonent> vect;
	setlocale(LC_ALL, "Russian");
	char choise;
	do {
		cout << "Меню:\n1.Добавить.\n3.Напечатать\n4.Удалить\n5.Заменить\n6.Поиск\n7.Загрузить из файла\n0.Выход.\n";
		cin >> choise;
		switch (choise) {
		case '1':
			add_v(vect);
			break;
		case '3': 
			expor_vect(vect);
		  break;
		case '4':
			delete_v(vect);
			break;
		case '5':
			exchange_v(vect);
			break;
		case '6': 
			expor_vect(search(vect));
		break;
		case '7':
			load_file(vect);
			break;
		default:
			if (choise != '0') cout << "\nНеверный ввод, введите число от 0 до 9\n";
		}
	} while (choise != '0');
    return 0;
}

